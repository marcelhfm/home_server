package components

import (
  "strconv"
  "fmt"
)

templ DatasourceDataPane(dsId string, dsName string, chart string, co2 int, display_status int, last_seen string, status string, data bool) {

  <div id="data-pane" class="mt-8">
    <div class="w-full">

        <ul class="max-w-2xl ml-auto mr-auto mb-4 flex flex-wrap text-sm font-medium text-center text-gray-500 border-b border-gray-200">
            <li class="me-2">
                <a href="#" aria-current="page" class="inline-block p-4 text-blue-600 bg-gray-100 rounded-t-lg active dark:bg-gray-800 dark:text-blue-500">Data</a>
            </li>
            <li class="me-2">
                <a href={ templ.URL(fmt.Sprintf("/ds/%s/logs?name=%s", dsId, dsName)) } class="inline-block p-4 rounded-t-lg hover:text-gray-600 hover:bg-gray-50 dark:hover:bg-gray-800 dark:hover:text-gray-300">Logs</a>
            </li>
        </ul>

        <div>
          if data {
            <div class="flex max-w-2xl ml-auto mr-auto">
            <div class="block w-full p-6 bg-white border border-gray-200 rounded-lg shadow mr-2 sm:mr-10">
              if co2 > 1200 {
                <p class="text-lg text-red-500">{strconv.Itoa(co2)}</p>
              } else {
                <p class="text-lg text-green-500">{strconv.Itoa(co2)}</p>
              }
              <p class="font-normal text-gray-700 dark:text-gray-400">Current CO2 (ppm)</p>
            </div>
            <div class="block w-full p-6 bg-white border border-gray-200 rounded-lg shadow mr-2 sm:mr-10">
              <p class="font-normal text-gray-700 dark:text-gray-400">
              if display_status == 1 {
                Display: <p class="text-green-500 text-lg">On</p>
              } else {
                Display: <p class="text-red-500 text-lg">Off</p>
              }
              </p>
            </div>
            <div class="block w-full p-6 bg-white border border-gray-200 rounded-lg shadow">
              <p class="font-normal text-gray-700 mr-2">
              Last seen:</p> 
              <div class="flex items-center">
                <p class="text-lg">{ last_seen }</p>
                <span class="relative flex h-3 w-3 ml-2">
                  <span 
                    if (status == "CONNECTED") {
                      class="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 bg-green-400"
                    } else {
                      class="animate-ping absolute inline-flex h-full w-full rounded-full opacity-75 bg-red-400"
                    }
                  ></span>
                  <span 
                    if (status == "CONNECTED") {
                      class="relative inline-flex rounded-full h-3 w-3 bg-green-500"
                    } else {
                      class="relative inline-flex rounded-full h-3 w-3 bg-red-500"
                    }
                  ></span>
                </span>
              </div>
            </div>
          </div>

          <div class="flex ml-auto mr-auto block max-w-2xl p-6 bg-white border border-gray-200 rounded-lg shadow mt-5">
             @templ.Raw(chart)
          </div>
        } else {
          <div class="flex max-w-2xl ml-auto mr-auto">
            <div id="alert" class="w-full bg-blue-100 border border-blue-400 text-blue-700 px-4 py-3 rounded relative" role="alert">No Data</div>
          </div>
        }
      </div>
    </div>
  </div>
}
